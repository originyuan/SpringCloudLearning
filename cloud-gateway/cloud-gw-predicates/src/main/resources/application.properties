# 服务端口
server.port=9051
# 服务名称 必须有 保证唯一性
spring.application.name=gw-predicates
# nacos server 的地址
spring.cloud.nacos.discovery.server-addr=localhost:8848
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos

# 服务发布到指定的namespace，不指定默认就是public
spring.cloud.nacos.discovery.namespace=qa
# 服务发布到指定的group，默认值是DEFAULT_GROUP
spring.cloud.nacos.discovery.group=my-group

# 网关配置
# 路由转发

# 精确匹配要放到前面，路由是从上到下匹配的，匹配到后就不会往下继续匹配了
spring.cloud.gateway.routes[0].id=gw-server
# 硬编码
#spring.cloud.gateway.routes[0].uri=http://localhost:9059
# 使用服务名和负载均衡
spring.cloud.gateway.routes[0].uri=lb://gw-server
spring.cloud.gateway.routes[0].predicates[0]=Path=/gw-server/**
# 请求时间在指定时间之后
spring.cloud.gateway.routes[0].predicates[1]=After=2022-07-08T20:22:53.437+08:00[Asia/Shanghai]
# 请求时间在指定时间之前
spring.cloud.gateway.routes[0].predicates[2]=Before=2022-07-08T23:22:53.437+08:00[Asia/Shanghai]
# 请求时间在指定时间之间 逗号分隔
spring.cloud.gateway.routes[0].predicates[3]=Between=2022-07-08T20:22:53.437+08:00[Asia/Shanghai],2022-07-08T23:22:53.437+08:00[Asia/Shanghai]
# 逗号分隔，第一参数为cookie的key 第二个参数为cookie的value
spring.cloud.gateway.routes[0].predicates[4]=Cookie=age,18
spring.cloud.gateway.routes[0].predicates[5]=Header=token,123

# 转发规则：http://localhost:9050/a => http://www.baidu.com/a
spring.cloud.gateway.routes[1].id=baidu
spring.cloud.gateway.routes[1].uri=http://www.baidu.com
spring.cloud.gateway.routes[1].predicates[0]=Path=/**


